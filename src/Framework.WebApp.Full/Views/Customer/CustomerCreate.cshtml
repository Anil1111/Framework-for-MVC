@model Framework.Customer.CustomerModel
@using Genesys.Extensions
@using Framework.WebApp
@using Framework.Customer

<div id="section-create" class="section-light">
    <div class="section-contents">
        @using (Html.BeginForm(CustomerController.CreateAction, CustomerController.ControllerName, new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { role = "form" }))
        {
            <div class="section-header">Create a new Customer</div>
            @Html.AntiForgeryToken()
            <div class="form-group row">
                @Html.LabelFor(m => m.FirstName, "First Name", new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", @placeholder = "Customer first name" })
                    @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(m => m.LastName, "Last Name", new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", @placeholder = "Customer last name", @required = "required" })
                    @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(m => m.BirthDate, "Birth Date", new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(m => m.BirthDate, new { @id = "txtBirthDate", @class = "form-control BirthDate", @Value = Model.BirthDate == TypeExtension.DefaultDate ? TypeExtension.DefaultString : Model.BirthDate.ToString("MM/dd/yyyy"), @placeholder = "MM/DD/YYYY" })
                    @Html.ValidationMessageFor(m => m.BirthDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(m => m.GenderId, "Gender", new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.DropDownListFor(m => m.GenderId,
                            new SelectList(GenderList.GetAll(), "Key", "Value", Model.GenderId), new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group row section-buttons">
                <button type="submit" class="btn btn-primary">Create this Customer</button>
            </div>
        }
        <div class="row">
            <div class="col-xs-offset-1 col-xs-10 ">
                @if (!ViewData.ModelState.IsValid)
                {
                    @Html.ValidationSummary(false, "Action resulted in...", new { @class = "text-danger" })
                }
                else
                {
                    <p class="text-info">@TempData[CustomerController.ResultMessage]</p>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        $(function () {
            $("#txtBirthDate").datepicker({
                dateformat: "mm/dd/yy",
                changeMonth: true,
                changeYear: true,
                yearRange: 'c-75:c',
                defaultDate: "-25y-m-d",
                beforeShow: function () { $('#ui-datepicker-div').toMaxZIndex(); }
            });
        });
    </script>
}